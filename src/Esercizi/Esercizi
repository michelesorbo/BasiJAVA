Esercizio 1:
Creare una classe operazioni dotata di un costruttore che prende due numeri a e b e
quattro metodi che simulano le 4 operazioni.
metodo pow() che stampi a video la potenza di base (ossia stampa il prodotto di a*a),

Esercizio 2
Creare un metodo che ricevuti in input 3 valori restituisca il valore maggiore (cercaMax(int a, int b,int c))
Testarlo chiedendo di insere i 3 numeri all'utente

Esercizio 3
Creare un metodo che passato un array lo restituisca pieno di numeri casuali compresi tra 1 e 200.
Dopo aver riempito l'array crerare un metodo che restituisca il valore massimo e mino dell'array

Esercizio 4
Simulare il lancio dei dadi
Chiedere all'utente quanti dati vuole lanciare e quante facce devo avere i dadi
il metodo deve ricevere il numeri di dadi da lanciare e le facce dei dadi (landiDadi(int nDadi, int nFacce)

Esercizio 5:
E' necessario scrivere una applicazione che simula il funzionamento di un frammento del sistema
informativo di un operatore di telefonia cellulare.

Si devono quindi rappresentare i dati relativi ad una carta SIM ed in particolare:
- il numero di telefono
- il credito disponibile in euro
- la lista delle telefonate effettuate

Per ciascuna telefonata deve essere rappresentata la durata in minuti

La classe SIM dovrà fornire le seguenti funzionalità:
- un costruttore parametrizzato che crea una SIM con numero di telefono, un credito e
la lista delle telefonate vuota

- un metodo per l'inserimento di una telefonata con i dati forniti dall'utente.

- una funzione per il calcolo dei minuti totali di conversazione.

- una funzione per il calcolo delle telefonate effettuate verso un certo numero SE RIUSCITE

- una procedura per la stampa dei dati della SIM e l'elenco delle telefonate.

Esercizio 6: (Ereditarietà)
Realizzare le classi che permettono di modellare diverse tipologie di veicolo.
Tutti i veicoli sono caratterizzati da:
    - targa
    - marca
    - modello
    - numero di posti

Tra i veicoli ci saranno gli autocarri caratterizzati da: capacità di carico in quintali
E ci saranno gli autoveicoli che avranno il numero di porte

Esercizio 7 (Ereditarietà):
Il gestore di un negozio associa a tutti i suoi Prodotti un codice a barre univoco,
una descrizione sintetica del prodotto e il suo prezzo unitario.
Realizzare una classe Prodotti con le opportune variabili d'istanza e metodi get e set.

Aggiungere alla classe Prodotti un metodo applicaSconto che modifica il prezzo del
prodotto diminuendolo dello sconto inserito come parametro (es 5%).

Il gestore del negozio vuole fare una distinzione tra i prodotti Alimentari e quelli
Non Alimentari.
Ai prodotti Alimentari viene infatti associata una data di scadenza,
mentre a quelli Non Alimentari il materiale principale di cui sono fatti.
Realizzare le sottoclassi Alimentari e NonAlimentari estendendo opportunamente
la classe Prodotti.

Sovrascrivere il metodo applicaSconto per i prodotti Alimentari che applicca
automaticamente uno sconto del 20%

Realizzare una classe ListaSpesa che chieda all'utente di inserire i prodotti
acquistati e calcoli il totale della spesa applicando gli opportuni sconti se il
cliente ha la tessera fedeltà.

Esercizio 8:
Scrivi un programma che simuli il lancio di un dado e di una moneta stampandone il risultato;
con l'utilizzo di una classe astratta che rappresenti i comportamenti comuni degli
oggetti dado e moneta istanziati.
Creare un metodo compare per vedere chi vince
    d1 = 4
    d2 = 6
    d1.Compara(d2) Restiruisce d2 ha vinto

    M1 = testa
    chiedere all'utente di scegliere testa o croce
    se m1 è uguale alla scelta l'utente ha vinto
